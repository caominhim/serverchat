/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package serverchat;

import java.io.IOException;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.net.SocketException;
import java.net.SocketTimeoutException;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Wade
 */
public class client_ extends javax.swing.JFrame {

    DatagramSocket socket;
    public static final int DEFAULT_PORT = 4434;

    public static final byte HELLO = 1;
    public static final byte HELLO_LENGTH = 8;//length of message in bytes
    public static final byte CHALLENGE = 2;
    public static final byte CHALLENGE_LENGTH = 8;
    public static final byte RESPONSE = 3;
    public static final byte RESPONSE_LENGTH = 16;
    public static final byte AUTH_SUCCESS = 4;
    public static final byte AUTH_FAIL = 5;
    public static final byte CONNECT = 6;
    public static final byte CONNECTED = 7;
    public static final byte CHAT_REQUEST = 8;
    public static final byte CHAT_STARTED = 9;
    public static final byte UNREACHABLE = 10;
    public static final byte END_REQUEST = 11;
    public static final byte END_NOTIF = 12;
    public static final byte CHAT = 13;
    public static final byte HISTORY_REQ = 14;
    public static final byte HISTORY_RESP = 15;
    int timeout;
    int timeoutMax = 3;

    /**
     * Creates new form client_
     */
    public client_() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        chatField = new javax.swing.JTextArea();
        user_message = new javax.swing.JTextField();
        send = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        chatField.setEditable(false);
        chatField.setColumns(20);
        chatField.setRows(5);
        jScrollPane1.setViewportView(chatField);

        user_message.setText("Enter message here...");

        send.setText("Send");
        send.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(user_message, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(send, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(user_message, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(send, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 13, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void sendActionPerformed(java.awt.event.ActionEvent evt) {                                     
        // TODO add your handling code here:

        String user_status = user_message.getText();
        if (user_message.getText() == "Log on") {
            connected();
        } else {
            chatField.append("You need to type Log on to connect");
        }
    }                                    

    public void connected() {
        byte dbuff[] = new byte[9];
        dbuff[0] = HELLO;
        try {
            socket = new DatagramSocket();
        } catch (SocketException ex) {
            Logger.getLogger(client_.class.getName()).log(Level.SEVERE, null, ex);
            socket.close();
            return;
        }

        DatagramPacket packet = null;
        try {

            packet = new DatagramPacket(dbuff, dbuff.length, InetAddress.getLocalHost(), 4434);

        } catch (UnknownHostException e) {
            e.printStackTrace();
            return;
        }
        try {
            socket.send(packet);
        } catch (IOException ex) {
            socket.close();
            return;
        }

        packet.setLength(CHALLENGE + 1);
        packet.setData(new byte[CHALLENGE_LENGTH + 1]);
        while (timeout < timeoutMax) {

            try {
                socket.receive(packet);
            } catch (SocketTimeoutException e) {
                timeout++;
            } catch (IOException e) 
            {
                e.printStackTrace();
                socket.close();
                return;
            }

            
           long = COMP_128.A3A8(r,key);
            
        }
    }


/**
 * @param args the command line arguments
 */
public static void main(String args[]) 
{
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                

}
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(client_.class
.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        

} catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(client_.class
.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        

} catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(client_.class
.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        

} catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(client_.class
.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
{
            public void run() 
{
                new client_().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private static javax.swing.JTextArea chatField;
    private javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JButton send;
    private static javax.swing.JTextField user_message;
    // End of variables declaration                   
}
